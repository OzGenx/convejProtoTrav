{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducers.js","constants/orderConstants.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","logout","dispatch","removeItem","document","location","href","getUserDetails","id","getState","a","config","headers","Authorization","token","axios","get","data","message","response","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","key","active","listProducts","pageNumber","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","params","sm","md","lg","ProductScreen","qty","setQty","setRating","comment","setComment","successProductReview","errorProductReview","alert","exact","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","cartitems","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","createElement","async","onload","body","appendChild","window","paypal","paitAt","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","checked","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","ProductEditScreen","setPrice","setImage","brand","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFilehandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.bf7045af.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productListReducer, productDetailsReducer, \r\n    productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer } from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, \r\n    userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers'\r\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, \r\n  orderListReducer, orderDeliverReducer } from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer\r\n    \r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n  : {}\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store","import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAIL, PRODUCT_CREATE_RESET, \r\n    PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_RESET,\r\n    PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, \r\n    PRODUCT_CREATE_REVIEW_FAIL, PRODUCT_CREATE_REVIEW_RESET,\r\n    PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, \r\n    PRODUCT_TOP_FAIL } from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return { loading: false,  \r\n                products: action.payload.products, \r\n                pages: action.payload.pages, \r\n                page: action.payload.page }\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const productDetailsReducer = (state = { product: {reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false,  product: action.payload }\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_RESET:\r\n            return { }\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return { }\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const productTopRatedReducer = (state = { products: []}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload}\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\nexport const PRODUCT_TOP_RESET = 'PRODUCT_TOP_RESET'","import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch(action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            //checking if product already exists\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if(existItem) {\r\n                return {\r\n                    ...state, \r\n                    cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\r\n                }\r\n\r\n            } else {\r\n                //if it doesnt exist push it to array\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload),\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload, //= shippingAddress to the data we feed in the form\r\n            }\r\n\r\n       case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload, \r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n","import { \r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_RESET,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_FAIL,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_REQUEST,\r\n    USER_UPDATE_RESET,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL\r\n } from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return {} \r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const userDetailsReducer = (state = {user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n            case USER_DETAILS_RESET:\r\n                return { user: {} }\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false,  users: action.payload }\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LIST_RESET:\r\n            return { user: [] }\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const userDeleteReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_UPDATE_RESET:\r\n            return {\r\n                user: {}\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n\r\n\r\n","import { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL,\r\nORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, \r\nORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_RESET,\r\nORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_RESET, \r\nORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL,\r\nORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL, ORDER_DELIVER_RESET} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (\r\n    state = { loading: true, orderItems: [], shippingAddress: {} },\r\n    action\r\n  ) => {\r\n    switch (action.type) {\r\n      case ORDER_DETAILS_REQUEST:\r\n        return {\r\n          ...state,\r\n          loading: true,\r\n        }\r\n      case ORDER_DETAILS_SUCCESS:\r\n        return {\r\n          loading: false,\r\n          order: action.payload,\r\n        }\r\n      case ORDER_DETAILS_FAIL:\r\n        return {\r\n          loading: false,\r\n          error: action.payload,\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        \r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        \r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch(action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: [] }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch(action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n\r\n\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst SearchBox = ({ history }) => {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(keyword.trim()) {\r\n            history.push(`/search/${keyword}`)\r\n        } else {\r\n            history.push('/')\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control type='text' name='q' onChange={(e) => setKeyword(e.target.value)} \r\n            placeholder='Search...' className='mr-sm-2 ml-sm-5'>\r\n\r\n            </Form.Control>\r\n            <Button type='submit' variant='outline-success' className='p-2' > Search </Button>\r\n            \r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import axios from 'axios'\r\nimport {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DETAILS_RESET,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_REQUEST,\r\n} from '../constants/userConstants'\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      { email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo')\r\n  localStorage.removeItem('cartItems')\r\n  localStorage.removeItem('shippingAddress')\r\n  localStorage.removeItem('paymentMethod')\r\n  dispatch({ type: USER_LOGOUT })\r\n  dispatch({ type: USER_DETAILS_RESET })\r\n  dispatch({ type: ORDER_LIST_MY_RESET })\r\n  dispatch({ type: USER_LIST_RESET })\r\n  document.location.href = '/login'\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users',\r\n      { name, email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config)\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    })\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users`, config)\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/users/${id}`, config)\r\n\r\n    dispatch({ type: USER_DELETE_SUCCESS })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n\r\n    dispatch({ type: USER_UPDATE_SUCCESS })\r\n\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, NavDropdown, Form, Button, FormControl, Container } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return <header>\r\n            <Navbar bg=\"dark\" /* variant='light' */ expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                <LinkContainer to='/'><Navbar.Brand>HydroShop</Navbar.Brand>\r\n                </LinkContainer>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n\r\n                    <Route render={({ history }) => <SearchBox history={history}/>} />\r\n\r\n                    <Nav className=\"ml-auto\">\r\n                    <LinkContainer to='/cart'>\r\n                        <Nav.Link><i className='fas fa-shopping-cart'></i>Cart</Nav.Link>\r\n                    </LinkContainer>\r\n                    {userInfo ? (\r\n                        <NavDropdown title={userInfo.name} id='username'>\r\n                            <LinkContainer to='/profile'>\r\n                                <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                            </LinkContainer>\r\n                            <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                        </NavDropdown>\r\n\r\n                    ) : (<LinkContainer to='/login'>\r\n                    <Nav.Link><i className='fas fa-user'></i>Sign In</Nav.Link>\r\n                </LinkContainer> )}\r\n\r\n                    {/*\r\n                    <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                        <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                        <NavDropdown.Divider />\r\n                        <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                    </NavDropdown>\r\n                    */}\r\n                    </Nav>\r\n                        {userInfo && userInfo.isAdmin && (\r\n                            <NavDropdown title='Admin' id='adminmenu'>\r\n                            <LinkContainer to='/admin/userlist'>\r\n                                <NavDropdown.Item>Users</NavDropdown.Item>\r\n                            </LinkContainer>\r\n                            <LinkContainer to='/admin/productlist'>\r\n                                <NavDropdown.Item>Products</NavDropdown.Item>\r\n                            </LinkContainer>\r\n                            <LinkContainer to='/admin/orderlist'>\r\n                                <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                            </LinkContainer>\r\n                           \r\n                        </NavDropdown>\r\n\r\n                        ) }\r\n                </Navbar.Collapse>\r\n                </Container>\r\n                </Navbar>\r\n            </header>\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n    return <footer>\r\n    <Container>\r\n        <Row>\r\n            <Col className='text-center py-3'>\r\n            Copyright &copy; HydroShop\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n    \r\n        </footer>\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n            <i style={{ color: color }} className={value >=1 ? 'fas fa-star' : value >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n             <span>\r\n            <i style={{ color: color }} className={value >=2 ? 'fas fa-star' : value >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n             <span>\r\n            <i style={{ color: color }} className={value >=3 ? 'fas fa-star' : value >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n             <span>\r\n            <i style={{ color: color }} className={value >=4 ? 'fas fa-star' : value >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span> <span>\r\n            <i style={{ color: color }} className={value >=5 ? 'fas fa-star' : value >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>{text ? text : '' }</span>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: '#FFD700',\r\n}\r\n\r\n/* Setting PropTypes*/\r\nRating.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string,\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport Rating from './Rating'\r\n\r\n            /* parsing in a prop using destructuring, \r\n            an alternative is to parse in (prop) and then prop.product.image . . .\r\n            instead of ({ product }) */\r\nconst Product = ({ product }) => {\r\n    return (\r\n        <Card className = 'my-3 p-3 rounded' /* margin top and bottom of 3, padding of 3 all round  */ >\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant='top' />\r\n            </Link>\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                <Card.Title as='div'><strong>{product.name}</strong>\r\n                </Card.Title>\r\n            </Link>\r\n            <Card.Text as='div'>\r\n                <Rating value={product.rating} \r\n                text={`${product.numReviews} reviews`} \r\n                 />\r\n            </Card.Text>\r\n\r\n            <Card.Text as='h4'>${product.price}         \r\n            </Card.Text>\r\n            </Card.Body>\r\n            \r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children}) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info',\r\n}\r\nexport default Message\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner animation='border' role='style' style={{ width: '100px', height: '100px', margin: 'auto', display: 'block' }}>\r\n            <span className='sr-only'>Loading . . .</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n    return pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map(x => (\r\n                <LinkContainer key={x + 1} to={!isAdmin ? keyword ? `/search/${keyword}/page/${x + 1}` :\r\n            `/page/${x + 1}` : `/admin/productlist/${x+1}`}>\r\n                <Pagination.Item active={x+1 === page}>{x+1}</Pagination.Item>\r\n            </LinkContainer>\r\n                \r\n                ))}\r\n        </Pagination>\r\n\r\n    )\r\n   \r\n}\r\n\r\nexport default Paginate\r\n","import axios from 'axios'\r\nimport { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL,\r\nPRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_FAIL,\r\nPRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAIL,\r\nPRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL,\r\nPRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL,\r\nPRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL} from '../constants/productConstants'\r\n\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\r\n\r\n        dispatch ({\r\n            type: PRODUCT_LIST_SUCCESS, \r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch ({\r\n            type: PRODUCT_LIST_FAIL, \r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message, \r\n        })\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch ({\r\n            type: PRODUCT_DETAILS_SUCCESS, \r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch ({\r\n            type: PRODUCT_DETAILS_FAIL, \r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message, \r\n        })\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        await axios.delete(`/api/products/${id}`, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })   \r\n\r\n    } catch (error) {\r\n        dispatch ({\r\n            type: PRODUCT_DELETE_FAIL, \r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message, \r\n        })\r\n    }\r\n}\r\n\r\nexport const createProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/products`, {}, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data\r\n        })   \r\n\r\n    } catch (error) {\r\n        dispatch ({\r\n            type: PRODUCT_CREATE_FAIL, \r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message, \r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/products/${product._id}`, product, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })   \r\n\r\n    } catch (error) {\r\n        dispatch ({\r\n            type: PRODUCT_UPDATE_FAIL, \r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message, \r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n        })   \r\n\r\n    } catch (error) {\r\n        dispatch ({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL, \r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message, \r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top`)\r\n\r\n        dispatch ({\r\n            type: PRODUCT_TOP_SUCCESS, \r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch ({\r\n            type: PRODUCT_TOP_FAIL, \r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message, \r\n        })\r\n\r\n\r\n    }\r\n\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image} from 'react-bootstrap'\r\nimport {  useDispatch, useSelector } from 'react-redux'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nconst ProductCarousel = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { loading, error, products } = productTopRated\r\n\r\n    useEffect (() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return loading ? <Loader /> : error ? <Message variant='danger'> {error} </Message> : (\r\n        <Carousel pause='hover' className='bg-dark'>\r\n            {products.map(product => (\r\n                <Carousel.Item key={products._id}>\r\n                    <Link to={`/product/${product._id}`}>\r\n                        <Image src={product.image} alt={product.name} fluid />\r\n                        <Carousel.Caption className='carousel-caption'>\r\n                        <h2>{product.name}({product.price})</h2>\r\n                        </Carousel.Caption>\r\n                    </Link>\r\n                </Carousel.Item>\r\n            ))}\r\n        </Carousel>\r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React from 'react'\r\nimport { Helmet} from 'react-helmet'\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n    return (\r\n        <Helmet>\r\n            <title> {title} </title>\r\n            <meta name='description' content={description}/>\r\n            <meta name='keywords' content={keywords}/>\r\n          \r\n            \r\n        </Helmet>\r\n    )\r\n}\r\n\r\nMeta.defaultProps = {\r\n    title: 'Welcome To Hydropshop',\r\n    description: 'Platorm for your project resources',\r\n    keywords: 'equipment, water'\r\n}\r\n\r\nexport default Meta\r\n","import React, { useEffect } from 'react'\r\n\r\nimport {useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Col, Row } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport Meta from '../components/Meta'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\n\r\n\r\n\r\n\r\nconst HomeScreen = ({ match }) => {\r\n\r\n    const keyword = match.params.keyword\r\n\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList =useSelector(state => state.productList)\r\n    const { loading, error, products, page, pages } = productList\r\n   \r\n\r\n    /* useEffect makes a request to the back end \r\n        whatever we put inside the function runs as soon as the component loads\r\n    */\r\n    useEffect (() => {\r\n        dispatch(listProducts(keyword, pageNumber))\r\n        \r\n    }, [dispatch, keyword, pageNumber])   \r\n    \r\n     return (\r\n        <>\r\n            <Meta />\r\n            \r\n            {!keyword ?  <ProductCarousel />  : <Link to='/' className='btn btn-light'>Go Back</Link>}\r\n            <h1>Latest Products</h1>\r\n    {loading ? <Loader /> : error ? (<Message variant='danger'>{error} </Message> ): \r\n                ( <>\r\n                <Row>\r\n                {products.map( product => (\r\n                <Col key={product._id} sm={12} /* small screens 12 columns*/ md={6} lg={4}>\r\n                    <Product product={product} />\r\n                </Col>\r\n                ))}\r\n                \r\n            </Row>\r\n            <Paginate pages={pages} page={page} keyword={keyword ? keyword : ''} />\r\n            </>) }\r\n     \r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\nimport Meta from '../components/Meta'\r\n\r\n// import Product from '../components/Product'\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n    \r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product} = productDetails\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const { success: successProductReview, error: errorProductReview } = productReviewCreate\r\n\r\n    /* useEffect makes a request to the back end \r\n        whatever we put inside the function runs as soon as the component loads\r\n    */\r\n    useEffect (() => {\r\n        if (successProductReview) {\r\n            alert('Review Submitted')\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n        dispatch(listProductDetails(match.params.id))\r\n    }, [dispatch, match, successProductReview])   \r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(match.params.id, {rating,\r\n        comment}))\r\n\r\n    }\r\n\r\n    return <>\r\n    <Link className='btn btn-dark my-3' to='/' exact> GO BACK</Link>\r\n{loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n    <>\r\n    <Row>\r\n        <Meta title={product.name} />\r\n    <Col sm={12} md={8} lg={4}>\r\n    {/* fluid keeps the image in its container */}\r\n        <Image src={product.image} alt={product.name} fluid></Image>\r\n    </Col>\r\n    \r\n    <Col sm={12} md={8} lg={4}>\r\n        {/* Variant of flush takes away the border */}\r\n        <ListGroup variant='flush'>\r\n            \r\n            <ListGroup.Item>\r\n                <h3>{product.name}</h3>\r\n            </ListGroup.Item>\r\n            \r\n            <ListGroup.Item>\r\n                <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n                Price: ${product.price}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n                <strong>Description:</strong> {product.description}\r\n            </ListGroup.Item>\r\n\r\n        </ListGroup>\r\n    </Col>\r\n\r\n     <Col sm={12} md={6} lg={3} >\r\n        <Card variant='flush'>\r\n            <ListGroup.Item>\r\n                <Row>\r\n                    <Col>\r\n                        Price: \r\n                    </Col>\r\n\r\n                    <Col>\r\n                        <strong>${product.price} </strong>\r\n                    </Col>\r\n                </Row>\r\n                \r\n                <ListGroup.Item>\r\n                <Row>\r\n                    <Col>\r\n                        Availability: \r\n                    </Col>\r\n\r\n                    <Col>\r\n                        {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                    </Col>\r\n                </Row>\r\n                </ListGroup.Item>\r\n                \r\n                {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>Qty</Col>\r\n                            <Col>\r\n                                <Form.Control as='select' value={qty} onChange={(e) =>\r\n                                setQty(e.target.value)}>\r\n                                   {[...Array(product.countInStock).keys()].map((x) => (\r\n                                        <option key={x + 1} value={x + 1}>\r\n                                            {x + 1}\r\n                                        </option>\r\n                                    ))}\r\n                                </Form.Control>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </ListGroup.Item>\r\n                )}\r\n\r\n                <ListGroup.Item>\r\n                    {/* block class strecthes all the way across */}\r\n                    <Button onClick={addToCartHandler} className='btn-block' type='button' disabled={product.countInStock === 0}> ADD TO CART</Button>\r\n                </ListGroup.Item>\r\n\r\n\r\n            </ListGroup.Item>\r\n        </Card>\r\n    </Col>\r\n</Row>\r\n\r\n<Row>\r\n    <Col md={6}>\r\n        <h2>Reviews</h2>\r\n        {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n        <ListGroup variant='flush'>\r\n            {product.reviews.map(review => (\r\n                <ListGroup.Item key={review._id}>\r\n                    <strong>{review.name}</strong>\r\n                    <Rating value={review.rating}/>\r\n                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                    <p>{review.comment}</p>\r\n                </ListGroup.Item>\r\n\r\n            ))}\r\n            <ListGroup.Item>\r\n                <h2>Write a review</h2>\r\n                {errorProductReview && (<Message variant='danger'> {errorProductReview} </Message>)}\r\n                { userInfo ? (<Form onSubmit={submitHandler}> \r\n                    <Form.Group controlId='rating'>\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control as='select' value={rating} onChange={(e) => setRating(e.target.value)}>\r\n                            <option value=''>Select...</option>\r\n                            <option value='1'>1 Star</option>\r\n                            <option value='2'>2 Star</option>\r\n                            <option value='3'>3 Star</option>\r\n                            <option value='4'>4 Star</option>\r\n                            <option value='5'>5 Star</option>\r\n                        </Form.Control>\r\n\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='comment'>\r\n                        <Form.Label>Comment</Form.Label>\r\n                        <Form.Control as='textarea' row='3' value={comment} \r\n                        onChange={(e) => setComment(e.target.value)}></Form.Control>\r\n\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>Submit</Button>\r\n                </Form>) : \r\n                <Message> Please <Link to='/login'>Sign In</Link> to write a review</Message> }\r\n            </ListGroup.Item>\r\n        </ListGroup>\r\n    </Col>\r\n</Row>\r\n</>\r\n\r\n)}\r\n    \r\n        </>\r\n   \r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data, // payload will be the data that is passed in\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data, // payload will be the data that is passed in\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom' \r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n    const productId = match.params.id\r\n\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    useEffect(() => {\r\n        if(productId) {\r\n            dispatch(addToCart(productId, qty))\r\n\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? <Message>Your cart is empty <Link to='/'>Go back</Link></Message> : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n\r\n                        <Col md={2}>${item.price}</Col>\r\n                        <Col md={2}>\r\n                        <Form.Control as='select' value={item.qty} onChange={(e) =>\r\n                                dispatch(addToCart(item.product, Number(e.target.value)))}>\r\n                                   {[...Array(item.countInStock).keys()].map((x) => (\r\n                                        <option key={x + 1} value={x + 1}>\r\n                                            {x + 1}\r\n                                        </option>\r\n                                    ))}\r\n                                </Form.Control>\r\n                        </Col>\r\n                        <Col md={2}>\r\n                            <Button type='button' variant='light' onClick={() => removeFromCartHandler(item.product)}>\r\n                                <i className='fas fa-trash'></i>\r\n                            </Button>\r\n                        </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal { cartItems.reduce((acc, item) => acc + item.qty, 0) } items</h2>\r\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button type='button' className='btn-block' disabled={cartItems.length === 0} onClick={checkoutHandler}>\r\n                                Proceed to checkout\r\n\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                </Card>\r\n\r\n            </Col>\r\n\r\n        </Row>\r\n    )\r\n    \r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                 <Col xs={12} md={6}>\r\n                     {children}\r\n                 </Col>\r\n            </Row>\r\n            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, {useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('') \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { loading, error, userInfo } = userLogin\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect (( ) =>{\r\n        if(userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n\r\n    return (\r\n        <FormContainer>  \r\n            <h1>Sign In</h1>\r\n    {error && <Message variant='danger'>{error}</Message>} \r\n    {loading && <Loader>Loading</Loader>}  \r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type='email' placeholder='Enter email'\r\n                    value={email} onChange={(e) => setEmail(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Enter password'\r\n                    value={password} onChange={(e) => setPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n                </Button>\r\n            </Form>  \r\n             <Row className='py-3'>\r\n                 <Col>\r\n                    New Customer? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Register</Link>\r\n                 </Col>\r\n\r\n             </Row>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userRegister = useSelector((state) => state.userRegister)\r\n  const { loading, error, userInfo } = userRegister\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      dispatch(register(name, email, password))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='confirmPassword'>\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Confirm password'\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Register\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          Have an Account?{' '}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen","import React, {useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants' \r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\n    const ProfileScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector((state) => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector((state) => state.orderListMy)\r\n    const { loading:loadingOrders , error:errorOrders , orders } = orderListMy\r\n\r\n    useEffect (( ) => {\r\n        if(!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            /*if(!user.name) {*/\r\n                \r\n            if (!user || !user.name || success) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))   \r\n                dispatch(listMyOrders())\r\n\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n        \r\n            }\r\n\r\n\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(password !== confirmPassword) {\r\n            setMessage('Password do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n            <h2>User Profile</h2>\r\n    {message && <Message variant='danger'>{message}</Message>} \r\n    {error && <Message variant='danger'>{error}</Message>}\r\n    {success && <Message variant='success'>Profile updated</Message>}  \r\n    {loading && <Loader></Loader>}   \r\n            <Form onSubmit={submitHandler}>\r\n\r\n            <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type='name' placeholder='Enter name'\r\n                    value={name} onChange={(e) => setName(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type='email' placeholder='Enter email'\r\n                    value={email} onChange={(e) => setEmail(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Enter password'\r\n                    value={password} onChange={(e) => setPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Confirm password'\r\n                    value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                Update\r\n                </Button>\r\n            </Form>  \r\n            </Col>\r\n\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? <Loader /> : errorOrders ? <Message variant='danger'>{errorOrders}</Message> : (\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>DATE</th>\r\n                                <th>TOTAL</th>\r\n                                <th>PAID</th>\r\n                                <th>DELIVERED</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>{order.totalPrice}</td>\r\n                                    <td>\r\n                                        {order.isPaid ? (\r\n                                        order.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                        <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                        )}\r\n                                    </td>\r\n                                    <td>\r\n                                        {order.isDelivered ? (\r\n                                        order.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                        <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                        )}\r\n                  </td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button className='btn-sm' variant='light'>Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n\r\n                            ))}\r\n                        </tbody>\r\n\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen"," import axios from 'axios'\r\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL,\r\n    ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, \r\n    ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL,\r\n    ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL} from '../constants/orderConstants'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/orders`, order, config)\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data,\r\n        })   \r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch ({\r\n            type: ORDER_CREATE_FAIL, \r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message, \r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                //CONTENT TYPE NOT SPECIFIED BECAUSE IT IS A GET REQUEST\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })   \r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch ({\r\n            type: ORDER_DETAILS_FAIL, \r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message, \r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config)\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data,\r\n        })   \r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch ({\r\n            type: ORDER_PAY_FAIL, \r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message, \r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/orders/${order._id}/deliver`, {}, config)\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data,\r\n        })   \r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch ({\r\n            type: ORDER_DELIVER_FAIL, \r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message, \r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data,\r\n        })   \r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch ({\r\n            type: ORDER_LIST_MY_FAIL, \r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message, \r\n        })\r\n    }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data,\r\n        })   \r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch ({\r\n            type: ORDER_LIST_FAIL, \r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message, \r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>\r\n                            Sign In\r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n                ): <Nav.Link disabled>Sign In</Nav.Link>}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>\r\n                            Shipping\r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n                ): <Nav.Link disabled>Shipping</Nav.Link>}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>\r\n                            Payment\r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n                ): <Nav.Link disabled>Payment</Nav.Link>}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>\r\n                            Place Order\r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n                ): <Nav.Link disabled>Place Order</Nav.Link>}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, {useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address) //if any of these fields already exist then will be field\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n        \r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2/>\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control type='text' placeholder='Enter address'\r\n                    value={address} required onChange={(e) => setAddress(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City </Form.Label>\r\n                    <Form.Control type='text' placeholder='Enter City'\r\n                    value={city} required onChange={(e) => setCity(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control type='text' placeholder='Enter Postal Code'\r\n                    value={postalCode} required onChange={(e) => setPostalCode(e.target.value)}>\r\n                </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control type='text' placeholder='Country'\r\n                    value={country} required onChange={(e) => setCountry(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>Continue</Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, {useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    if(!shippingAddress) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('Paypal') //if any of these fields already exist then will be field\r\n  \r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n        \r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3/>\r\n            <h1>Payment Method</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n\r\n                    <Col>\r\n                        <Form.Check type='radio' label='Paypal or Credit Card' id='PayPal'\r\n                         name='Payment Method' value='Paypal' onChange={(e) => setPaymentMethod(e.target.value)}>\r\n                         </Form.Check>\r\n                         <Form.Check type='radio' label='Stripe' id='Stripe'\r\n                         name='Payment Method' value='Stripe' onChange={(e) => setPaymentMethod(e.target.value)}>\r\n                         </Form.Check>\r\n                    </Col>\r\n\r\n                </Form.Group>\r\n           \r\n            <Button type='submit' variant='primary'>Continue</Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, {useEffect } from 'react'\r\nimport { Form, Button, Row, Col, ListGroup, Image, Card, Table } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n//grabbing items from cart\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    \r\n    const addDecimals = (num) => {\r\n        return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    // second argument is a 0 which is te start of the accumulator acc\r\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0))\r\n\r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n\r\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n     \r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, success, error } = orderCreate\r\n\r\n    useEffect (() => {\r\n        if(success) {\r\n            history.push(`/order/${order._id}`)\r\n        }\r\n        // eslint-disable-next-line \r\n    }, [history, success])\r\n\r\n    const placeOrderHandler = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice\r\n        }))\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong> Address </strong>\r\n                                {cart.shippingAddress.address}, \r\n                                {cart.shippingAddress.city},\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <strong>Method: </strong>\r\n                            {cart.paymentMethod}\r\n                        </ListGroup.Item>\r\n\r\n                        \r\n                            <ListGroup.Item>\r\n                                <h2>Order Items</h2>\r\n                                {cart.cartItems.length === 0 ? <Message>Your cart is empty</Message> : (\r\n                                                                        \r\n                                        <ListGroup variant='flush'>\r\n                                        {cart.cartItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                    </Col>\r\n\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                    </Col>\r\n                                               \r\n                                                    <Col md={4}>\r\n                                                     {item.qty} x ${item.price} = ${addDecimals(item.qty * item.price)}\r\n                                                 \r\n                                                    </Col>\r\n                                                \r\n                                                </Row>\r\n                                                                                               \r\n                                            </ListGroup.Item>\r\n                                                                 \r\n                                        ))}\r\n\r\n                                    </ListGroup>\r\n                                ) }\r\n                            </ListGroup.Item>\r\n                        \r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            \r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                        {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button type='button' className='btn-block' disabled={cart.cartitems === 0} onClick={placeOrderHandler}>\r\n                                        Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, {useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Form, Button, Row, Col, ListGroup, Image, Card, Table } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { deliverOrder, getOrderDetails, payOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n    const orderId = match.params.id\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderDetails = useSelector((state) => state.orderDetails)\r\n    const { order, loading, error } = orderDetails\r\n\r\n    const orderPay = useSelector((state) => state.orderPay)\r\n       //renaming loading and success since they has already been declared\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector((state) => state.orderDeliver)\r\n    //renaming loading and success since they has already been declared\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    if (!loading) {\r\n        //   Calculate prices\r\n        const addDecimals = (num) => {\r\n          return (Math.round(num * 100) / 100).toFixed(2)\r\n        }\r\n    \r\n        /* order.itemsPrice = addDecimals(\r\n          order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n        ) */\r\n      }\r\n\r\n    {/*\r\n\r\n    if(!loading) {\r\n\r\n        const addDecimals = (num) => {\r\n            return (Math.round(num * 100) / 100).toFixed(2)\r\n        }\r\n       \r\n        // second argument is a 0 which is te start of the accumulator acc\r\n    order.itemsPrice = addDecimals(\r\n        order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n        )\r\n    } */}\r\n\r\n    /*\r\n    useEffect (() => {\r\n        if(!order || order._id !== orderId) {\r\n            dispatch(getOrderDetails(orderId))\r\n        }\r\n    }, [order, orderId])\r\n    */\r\n\r\n\r\n    /*\r\n    order.shippingPrice = addDecimals(order.itemsPrice > 100 ? 0 : 100)\r\n\r\n    order.taxPrice = addDecimals(Number((0.15 * order.itemsPrice).toFixed(2)))\r\n\r\n    order.totalPrice = (Number(order.itemsPrice) + Number(order.shippingPrice) + Number(order.taxPrice)).toFixed(2)\r\n    */\r\n\r\n\r\n    useEffect (() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        const addPayPalScript = async () => {\r\n            const { data: clientId } = await axios.get('/api/config/paypal')\r\n            const script = document.createElement('script')\r\n            script.type='text/javascript'\r\n            script.src=`https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async = true\r\n            script.onload = () => {\r\n                setSdkReady(true)\r\n            }\r\n\r\n            document.body.appendChild(script)\r\n        }\r\n\r\n        if(!order || successPay || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if(!window.paypal) {\r\n                addPayPalScript()\r\n        } else {\r\n            setSdkReady(true)\r\n        }\r\n    }\r\n\r\n    }, [dispatch, orderId, successPay, order, successDeliver, history, userInfo])\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n\r\n    }\r\n\r\n        return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n        : <>\r\n        <Link to='/profile' className='btn btn-light my-3'>\r\n        Go To Orders\r\n      </Link>\r\n        <h1> Order: {order._id}</h1>\r\n                <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <strong>Name: </strong> {order.user.name} \r\n                            <p>\r\n                            <strong>Email: </strong> <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n                            </p>\r\n                            <p>\r\n                                <strong> Address </strong>\r\n                                {order.shippingAddress.address}, \r\n                                {order.shippingAddress.city},\r\n                                {order.shippingAddress.country}\r\n                            </p>\r\n                           \r\n                            {order.isDelivered ? ( <Message variant='success'>Delivered at {order.deliveredAt}</Message> ) : ( <Message variant='danger'>\r\n                                Not Delivered</Message> ) } \r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                            <strong>Method: </strong>\r\n                            {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? ( <Message variant='success'>Paid on {order.paitAt}</Message> ) : ( <Message variant='danger'>\r\n                                Not Paid</Message> ) }  \r\n                        </ListGroup.Item>\r\n\r\n                        \r\n                            <ListGroup.Item>\r\n                                <h2>Order Items</h2>\r\n                                {order.orderItems.length === 0 ? <Message>Order is empty</Message> : (\r\n                                                                        \r\n                                        <ListGroup variant='flush'>\r\n                                        {order.orderItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                    </Col>\r\n\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                    </Col>\r\n                                               \r\n                                                    <Col md={4}>\r\n                                                     {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                 \r\n                                                    </Col>\r\n                                                \r\n                                                </Row>\r\n                                                                                               \r\n                                            </ListGroup.Item>\r\n                                                                 \r\n                                        ))}\r\n\r\n                                    </ListGroup>\r\n                                ) }\r\n                            </ListGroup.Item>\r\n                        \r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            \r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                {loadingPay && <Loader />}\r\n                                {!sdkReady ? (\r\n                                    <Loader /> )\r\n                                : (\r\n                                    <PayPalButton\r\n                                    amount={order.totalPrice}\r\n                                    onSuccess={successPaymentHandler}\r\n                                    />\r\n                                )}\r\n                                </ListGroup.Item>\r\n                            )}\r\n                            {loadingDeliver && <Loader />}\r\n                            {/* if user is loogged in @userInfo if user is admin @ user.info.isAdmin */}\r\n                            {userInfo && userInfo.isAdmin && !order.isDelivered && (\r\n                                <ListGroup.Item>\r\n                                    <Button type='button' className='btn btn-bock' onClick={deliverHandler}>Mark As Delivered</Button>\r\n                                </ListGroup.Item>\r\n                            )}\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n</>\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userList = useSelector((state) => state.userList)\r\n  const { loading, error, users } = userList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userDelete = useSelector((state) => state.userDelete)\r\n  const { success: successDelete } = userDelete\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers())\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [dispatch, history, successDelete, userInfo])\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteUser(id))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users && users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>\r\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                </td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      <i className='fas fa-edit'></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant='danger'\r\n                    className='btn-sm'\r\n                    onClick={() => deleteHandler(user._id)}\r\n                  >\r\n                    <i className='fas fa-trash'></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserListScreen","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET })\r\n      history.push('/admin/userlist')\r\n    } else {\r\n      if (!user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId))\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n        setIsAdmin(user.isAdmin)\r\n      }\r\n    }\r\n  }, [dispatch, history, userId, user, successUpdate])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='isadmin'>\r\n              <Form.Check\r\n                type='checkbox'\r\n                label='Is Admin'\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserEditScreen","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n  const pageNumber = match.params.pageNumber || 1\r\n  \r\n  const dispatch = useDispatch()\r\n\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, error, products, pages, page } = productList\r\n\r\n  const productDelete = useSelector((state) => state.productDelete)\r\n  const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n  const productCreate = useSelector((state) => state.productCreate)\r\n  const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  /*\r\n  const userDelete = useSelector((state) => state.userDelete)\r\n  const { success: successDelete } = userDelete\r\n  */\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET })\r\n    if (!userInfo.isAdmin) {\r\n      history.push('/login')\r\n    }\r\n\r\n    if(successCreate) {\r\n      history.push(`/admin/product/${createdProduct._id}/edit`)\r\n    } else {\r\n      dispatch(listProducts('', pageNumber))\r\n    }\r\n  }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, pageNumber])\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure you want to delete')) {\r\n      dispatch (deleteProduct(id))\r\n\r\n    }\r\n  }\r\n\r\n  const createProductHandler = (product) => {\r\n    dispatch(createProduct())\r\n  }\r\n\r\n  return (\r\n    <>\r\n        <Row className='align-items-center'>\r\n            <Col>\r\n            <h1>Products</h1>\r\n            </Col>\r\n            <Col className='text-right'>\r\n            <Button className='my-3' onClick={createProductHandler}>\r\n                <i className='fas fa-plus'></i>Create Product\r\n                </Button>\r\n            </Col>\r\n        </Row>\r\n        {loadingDelete && <Loader />}\r\n        {errorDelete && <Message variant='danger'> {errorDelete} </Message>}\r\n        {loadingCreate && <Loader />}\r\n        {errorCreate && <Message variant='danger'> {errorCreate} </Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : ( <>\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>PRICE</th>\r\n              <th>CATEGORY</th>\r\n              <th>BRAND</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {products.map((product) => (\r\n              <tr key={product._id}>\r\n                <td>{product._id}</td>\r\n                <td>{product.name}</td>\r\n                <td>\r\n                  ${product.price}\r\n                </td>\r\n                <td>\r\n                  {product.category}\r\n                </td>\r\n                <td>brand</td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      <i className='fas fa-edit'></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant='danger'\r\n                    className='btn-sm'\r\n                    onClick={() => deleteHandler(product._id)}\r\n                  >\r\n                    <i className='fas fa-trash'></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n        <Paginate page={page} pages={pages} isAdmin={true} />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductListScreen","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n    //getting product id from URL\r\n  const productId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [price, setPrice] = useState(0)\r\n  const [image, setImage] = useState('')\r\n  const [brand, setBrand] = useState('')\r\n  const [category, setCategory] = useState('')\r\n  const [countInStock, setCountInStock] = useState(0)\r\n  const [description, setDescription] = useState('')\r\n  const [uploading, setUploading] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate)\r\n  const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = productUpdate\r\n\r\n    useEffect(() => {\r\n        if(successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!product.name || product._id !== productId) {\r\n                dispatch(listProductDetails(productId))\r\n              } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n              }\r\n        }\r\n        \r\n  }, [dispatch, history, productId, product, successUpdate])\r\n\r\n  const uploadFilehandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    setUploading(true)\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n\r\n      }\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n      setImage(data)\r\n      setUploading(false)\r\n      \r\n    } catch (error) {\r\n\r\n      setUploading(false)\r\n      \r\n    }\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(updateProduct({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        category,\r\n        countInStock,\r\n        description\r\n        \r\n    }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'> {errorUpdate} </Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='price'>\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter price'\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n            <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter image url'\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File id='image-file' label='Choose File' custom onChange={uploadFilehandler}>\r\n              </Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='brand'>\r\n            <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter brand name'\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='countInStock'>\r\n            <Form.Label>Count In Stock</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter Count In Stock'\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='category'>\r\n            <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter category name'\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter description'\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n            </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductEditScreen","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const orderList = useSelector((state) => state.orderList)\r\n  const { loading, error, orders, users } = orderList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listOrders())\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [dispatch, history, userInfo])\r\n\r\n\r\n  return (\r\n    <>\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n            <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.user && order.user.name}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>${order.totalPrice}</td>\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    order.deliveredAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/order/${order._id}`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderListScreen","import React from 'react';\nimport  { BrowserRouter as Router, Route }from 'react-router-dom'\nimport { Container } from 'react-bootstrap';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\n\n\nconst App = () => {\n  return (\n    <Router>\n\n      <Header />\n        <main className='py-3'>\n        <Container>\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          {/* ? on id makes id optional */}\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />          \n          <Route path='/admin/productlist' component={ProductListScreen} exact  />\n          <Route path='/admin/productlist/:pageNumber' component={ProductListScreen} exact/>\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n          <Route path='/search/:keyword' component={HomeScreen} />\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\n          <Route path='/search/:keyword/page/:pageNumber' component={HomeScreen} exact />\n          <Route path='/' component={HomeScreen} exact />\n\n        </Container>\n        \n        </main>\n      <Footer />\n \n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootStrap/pauseOceanic_bootstrap.min.css'\nimport './index.css'; \nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}